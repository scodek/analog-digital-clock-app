{"version":3,"sources":["components/data/city_latitude_longitude.js","components/CapitalCitySearch.js","components/ClockTypeSubmit.js","components/ClockTimeFunctionality.js","components/Clock.js","components/App.js","index.js"],"names":["Cities","city","lattitude","longitude","CapitalCitySearch","props","getInputValue","bind","onSubmit","availableCities","require","default","window","MyVars","e","this","getCity","target","value","preventDefault","cityOptions","map","cityInfoObj","id","name","sendCity","onChange","React","Component","ClockTypeSubmit","onClockTypeSubmit","type","getClockType","onClick","defaultClockType","ClockTimeFunctionality","timerID","setInterval","tick","clearInterval","getCurrentTime","timeNow","hours","minutes","seconds","cityCurrentTime","currentDate","split","replace","parseInt","Date","getHours","getMinutes","getSeconds","session","currentTime","hr","min","sec","clockType","hourStyle","transform","minuteStyle","secondStyle","class","xmlns","width","height","viewBox","cx","cy","r","d","style","className","Clock","App","state","localTime","receiveCityName","receiveClockType","showPosition","receiveCurrentTime","position","cityName","lat","longi","coords","latitude","i","length","fetch","then","response","text","console","log","time","match","fetchedCity","setState","navigator","geolocation","getCurrentPosition","alert","receivedCity","chosenCity","retClocktype","retCurrTime","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b995570.chunk.js","sourcesContent":["export default {\r\n    Cities : [\r\n    \r\n    {\r\n        city : \"Kolkata\",\r\n        lattitude :22.572645,\r\n        longitude: 88.363892\r\n    },\r\n    {\r\n        city : \"Madrid\",\r\n        lattitude :40.416775,\r\n        longitude: -3.70379\r\n    },\r\n    {\r\n    \r\n        city: \"Melbourne\",\r\n        lattitude: -37.815018,\r\n        longitude: 144.946014\r\n    },\r\n    \r\n    {\r\n        city : \"Moscow\",\r\n        lattitude : 59.93863,\r\n        longitude : 30.31413\r\n    },\r\n    \r\n    {\r\n        city : \"Beijing\",\r\n        lattitude : 39.913818,\r\n        longitude : 116.363625\r\n    },\r\n    \r\n    {\r\n        city : \"Bangkok\",\r\n        lattitude : 13.736717,\r\n        longitude : 100.523186 \r\n    },\r\n    \r\n    {\r\n        city : \"London\",\r\n        lattitude :51.509865,\r\n        longitude: -0.118092\r\n    },\r\n    \r\n    {\r\n        city : \"Berlin\",\r\n        lattitude :52.520008,\r\n        longitude: 13.404954\r\n    },\r\n    \r\n    {\r\n        city : \"Paris\",\r\n        lattitude :48.864716,\r\n        longitude: 2.349014\r\n    },\r\n    \r\n    {\r\n        city : \"Nairobi\",\r\n        lattitude :-1.28333,\r\n        longitude: 36.81667\r\n    },\r\n    \r\n    {\r\n        city : \"Amsterdam\",\r\n        lattitude :52.377956,\r\n        longitude: 4.897070\r\n    },\r\n    ]\r\n    \r\n    };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass CapitalCitySearch extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      //this.state = {cityName : this.props.sendCity};\r\n      this.getInputValue = this.getInputValue.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n  \r\n    componentWillMount(){\r\n      const availableCities = (require('./data/city_latitude_longitude.js').default)['Cities'];\r\n      window.MyVars = availableCities;\r\n    }\r\n  \r\n    getInputValue(e){\r\n      //alert(\"chosen val = \"+e.target.value);\r\n      //this.setState({cityName : e.target.value});\r\n      this.props.getCity(e.target.value);\r\n    }\r\n  \r\n    onSubmit(e){\r\n     // alert(this.state.cityName);\r\n      e.preventDefault();\r\n    }\r\n    render(){\r\n\r\n    let cityOptions = window.MyVars.map(cityInfoObj => <option>{cityInfoObj.city}</option>);\r\n    const inputDiv = <div id=\"cityDiv\">\r\n               <select id=\"capitalSelect\" name=\"capital\" value ={this.props.sendCity} onChange={this.getInputValue}>\r\n               <option>{this.props.sendCity}</option>\r\n                {cityOptions}\r\n                </select>\r\n               </div>;\r\n      return inputDiv;\r\n  \r\n  \r\n    }\r\n  }\r\n\r\n  export default CapitalCitySearch;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass ClockTypeSubmit extends React.Component{\r\n\r\n    constructor(props){\r\n      super(props);\r\n  \r\n      //I have to check why I need to bind the event functions\r\n      this.onClockTypeSubmit = this.onClockTypeSubmit.bind(this);\r\n    }\r\n  \r\n    onClockTypeSubmit(e){\r\n      let type =\"\";\r\n      type = e.target.value == \"digital\" ? \"analog\" : \"digital\";\r\n      e.target.value = type;\r\n      this.props.getClockType(type);\r\n  }\r\n  render(){\r\n  \r\n    return (\r\n  \r\n      <div id=\"clockDiv\">\r\n        <input id=\"clockType\" type=\"submit\" onClick={this.onClockTypeSubmit} value={this.props.defaultClockType}/>\r\n      </div>\r\n    );\r\n   \r\n  }\r\n  \r\n  }\r\n\r\n  export default ClockTypeSubmit;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass ClockTimeFunctionality extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      //this.state = {currentTime : this.timeNow()};\r\n    }\r\n  \r\n    //getCurrentTime\r\n    componentDidMount(){\r\n      this.timerID = setInterval(\r\n        () => this.tick(),1000\r\n      );\r\n    }\r\n  \r\n    componentWillUnmount(){\r\n      clearInterval(this.timerID);\r\n    }\r\n  \r\n    //this.props.cityCurrentTime has the current time from the App class\r\n    tick(){\r\n      //this.setState({currentTime : this.timeNow()});\r\n      this.props.getCurrentTime(this.timeNow());\r\n  \r\n    }\r\n    timeNow(){\r\n      //console.log(\"current time : \" + this.props.cityCurrentTime);\r\n     let hours =\"\";\r\n     let minutes = \"\";\r\n     let seconds = \"\";\r\n     if(!this.props.cityCurrentTime){\r\n      let currentDate = new Date();\r\n      hours = currentDate.getHours();\r\n      minutes = currentDate.getMinutes();\r\n      seconds = currentDate.getSeconds();\r\n     }else{\r\n       //console.log(\"Hello Current time =\" + this.props.cityCurrentTime);\r\n      let currentDate = this.props.cityCurrentTime.split(\":\");\r\n      hours = currentDate[0];\r\n      hours = hours.replace(/^0(\\d)/,\"$1\");\r\n      if(parseInt(hours) >= 24){\r\n        hours = 0;\r\n      }\r\n      minutes = currentDate[1];\r\n      minutes = minutes.replace(/^0(\\d)/,\"$1\");\r\n      if(parseInt(minutes) >= 60){\r\n        minutes = 0;\r\n        hours = parseInt(hours) + 1;\r\n      }\r\n      if(currentDate[2]){\r\n        \r\n        seconds = currentDate[2];\r\n        seconds = seconds.replace(/^0(\\d)/,\"$1\");\r\n        seconds = parseInt(seconds) + 1;\r\n        if(seconds >=60){\r\n          seconds =0;\r\n          minutes = parseInt(minutes) + 1;\r\n        }\r\n      }\r\n      \r\n      if(seconds == \"\"){\r\n      //console.log(\"Yes second is empty\");\r\n        seconds = \"1\";\r\n      }\r\n     \r\n     // seconds = seconds.replace(/^0(\\d)/,\"$1\");\r\n     // seconds = parseInt(seconds) + 1;\r\n      //console.log(\"seconds= \"+ seconds);\r\n     }\r\n      \r\n      let session = \"AM\";\r\n      if(hours == 0) hours=12;\r\n      /*if(hours > 12) {\r\n        hours = hours - 12;\r\n      }*/\r\n      if(hours > 12 || hours == 12 && minutes >=0 && seconds >=0)\r\n      session = \"PM\";\r\n  \r\n      /*return {\r\n        hours : hours,\r\n        minutes : minutes,\r\n        seconds: seconds,\r\n        session:session\r\n      };*/\r\n      if(hours < 10)\r\n      hours = '0' + hours;\r\n      if(minutes < 10)\r\n      minutes = '0' + minutes;\r\n      if(seconds < 10)\r\n      seconds = '0' + seconds;\r\n  \r\n      return hours + \":\" + minutes + \":\" + seconds + \" \" + session;\r\n    }\r\n    render(){\r\n  \r\n      let currentTime = this.props.cityCurrentTime.split(\":\");\r\n      \r\n        let hr = parseInt(currentTime[0]);\r\n        let min = parseInt(currentTime[1]);\r\n        let sec = parseInt(currentTime[2]);\r\n  //console.log(hr + min + sec);\r\n      \r\n      if(this.props.clockType ==\"analog\"){\r\n        //console.log(\"Yes analog\");\r\n       // console.log(\"time = \" + hr + \": \"+min + \": \"+sec);\r\n       /*let cal = hr*360/12 + ((min * 360/60)/12);*/\r\n       let cal = hr*360/12 + 30/3600;\r\n        let hourStyle = {\r\n         transform: 'rotate(' + cal + 'deg)',\r\n         /* transform: 'rotate(' + hr*360/12  + 'deg)',*/\r\n         /*transform: 'rotate(' + 30/3600 + 'deg)',*/\r\n        };\r\n  \r\n        let minuteStyle = {\r\n         /* transform: 'rotate(' + (min * 360/60) + (sec* 360/60)/60 + 'deg)',*/\r\n         transform: 'rotate(' + (min * 360/60) + 'deg)',\r\n        };\r\n  \r\n        let secondStyle = {\r\n  \r\n          transform: 'rotate(' + sec * 360/60 + 'deg)',\r\n        };\r\n  \r\n        return(\r\n          \r\n          <div class=\"clockbox\">\r\n         <svg id=\"clock\" xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"-50 -50 700 700\">\r\n              <g id=\"face\">\r\n                  <circle class=\"circle\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\r\n                  <path class=\"hour-marks\" d=\"M300.5 94V61M506 300.5h32M300.5 506v33M94 300.5H60M411.3 107.8l7.9-13.8M493 190.2l13-7.4M492.1 411.4l16.5 9.5M411 492.3l8.9 15.3M189 492.3l-9.2 15.9M107.7 411L93 419.5M107.5 189.3l-17.1-9.9M188.1 108.2l-9-15.6\"/>\r\n                  <circle class=\"mid-circle\" cx=\"300\" cy=\"300\" r=\"16.2\"/>\r\n              </g>\r\n              <g id=\"hour\" style={hourStyle}>\r\n                  <path class=\"hour-arm\" d=\"M300.5 298V142\"/>\r\n                  <circle class=\"sizing-box\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\r\n              </g>\r\n              <g id=\"minute\" style={minuteStyle}>\r\n                  <path class=\"minute-arm\" d=\"M300.5 298V67\"/>\r\n                  <circle class=\"sizing-box\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\r\n              </g>\r\n              <g id=\"second\" style={secondStyle}>\r\n                  <path class=\"second-arm\" d=\"M300.5 350V55\"/>\r\n                  <circle class=\"sizing-box\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\r\n              </g>\r\n          </svg>\r\n      </div>\r\n  \r\n        );\r\n        \r\n      }else{\r\n        hr = hr < 10 ? '0' + hr : hr;\r\n        min = min < 10 ? '0' + min : min;\r\n        sec = sec < 10 ? '0' + sec : sec;\r\n        return (\r\n          <div id=\"clockboxdigital\">\r\n            <div className=\"display-screen\">\r\n            { hr  + \":\" + min + \":\" + sec}\r\n            </div>\r\n          </div>\r\n        );\r\n  \r\n        \r\n      }\r\n    \r\n     \r\n  }\r\n}\r\n\r\nexport default ClockTimeFunctionality;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ClockTimeFunctionality from './ClockTimeFunctionality';\r\n\r\nclass Clock extends React.Component{\r\n    constructor(props){\r\n      super(props); \r\n  \r\n     \r\n    }\r\n  \r\n    \r\n  \r\n   render(){\r\n    \r\n     \r\n      return(\r\n      \r\n      <ClockTimeFunctionality clockType={this.props.clockType} cityCurrentTime = {this.props.cityCurrentTime} getCurrentTime={this.props.getCurrentTime}/>\r\n        \r\n      );\r\n  \r\n      \r\n      \r\n     \r\n      \r\n    }\r\n  }\r\n\r\n  export default Clock;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CapitalCitySearch from './CapitalCitySearch';\r\nimport ClockTypeSubmit from './ClockTypeSubmit';\r\nimport Clock from './Clock';\r\n//import { clearInterval } from 'timers';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       localTime: \"\",\r\n       city: \"\",\r\n       clockType : \"digital\"\r\n      };\r\n    this.receiveCityName = this.receiveCityName.bind(this);\r\n    this.receiveClockType = this.receiveClockType.bind(this);\r\n    this.showPosition = this.showPosition.bind(this);\r\n    this.receiveCurrentTime = this.receiveCurrentTime.bind(this);\r\n    \r\n    \r\n  }\r\nshowPosition(position,cityName){\r\n  \r\n  let lat = \"\",longi = \"\", latlongi = \"\";\r\n  if(position){\r\n    lat = position.coords.latitude;\r\n    longi = position.coords.longitude;\r\n  }\r\n  else{\r\n    for(let i=0;i<window.MyVars.length;i++){\r\n      if(window.MyVars[i].city == cityName){\r\n        lat = window.MyVars[i].lattitude;\r\n        longi = window.MyVars[i].longitude;\r\n      }\r\n    \r\n    }\r\n  }\r\n   \r\n\r\n // this.sendrequest(lat,longi);\r\n  //}\r\n\r\n  //sendRequest(lat,longi){\r\n    \r\n         const urlStr = \"http://api.geonames.org/timezone?lat=\" + lat + \"&lng=\" + longi + \"&username=skhalequ\";\r\n       // alert(urlStr);\r\n       fetch(urlStr)\r\n       .then(function(response) {\r\n         return response.text();\r\n       })\r\n       .then((response) => {\r\n         console.log(response);\r\n         let time = response.match(/<time>.+?<\\/time>/gm)[0].replace(/<time>.+?\\s+(.+)<\\/time>/,\"$1\");\r\n        console.log(\"Time line#59 : \"+time);\r\n         let fetchedCity = response.match(/<timezoneId>.+?<\\/timezoneId>/gm)[0].replace(/<timezoneId>.+?\\/([a-z]+)<\\/timezoneId>/i,\"$1\");\r\n         \r\n         this.setState({ city: fetchedCity,\r\n                        localTime : time\r\n          });\r\n         \r\n         console.log(\"time = \" + time + \", \" + fetchedCity );\r\n       });\r\n    }\r\n\r\n  componentDidMount(){\r\n   // alert(\"now city name = \" + this.state.city);\r\n    if (navigator.geolocation) {\r\n//alert(\"Reached here\");\r\n      navigator.geolocation.getCurrentPosition(this.showPosition);\r\n    }else{\r\n      alert(\"navigator.geolocation failed: Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n\r\n  receiveCityName(receivedCity){\r\n        this.setState({city:receivedCity},function(){\r\n          let chosenCity = this.state.city;\r\n         // alert(\"chosenCity = \"+chosenCity);\r\n          this.showPosition(\"\",chosenCity);\r\n          //window.MyVars.find();\r\n        });\r\n       // alert(\"receiveCityName : state city is : \"+this.state.city);\r\n    }\r\n\r\n  receiveClockType(retClocktype){\r\n    this.setState({clockType : retClocktype});\r\n  }\r\n\r\n  receiveCurrentTime(retCurrTime){\r\n   // console.log(\" receiveCurrentTime is : \"+ retCurrTime);\r\n    this.setState({localTime:retCurrTime});\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div id=\"main-body\">\r\n      <CapitalCitySearch sendCity={this.state.city} getCity={this.receiveCityName}/>\r\n      <ClockTypeSubmit defaultClockType={this.state.clockType} getClockType={this.receiveClockType}/>\r\n      \r\n    <Clock cityName={this.state.city} clockType={this.state.clockType} cityCurrentTime={this.state.localTime} getCurrentTime={this.receiveCurrentTime}/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}